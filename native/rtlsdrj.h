/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class de_rtlsdr_RtlDevice */

#ifndef _Included_de_rtlsdr_RtlDevice
#define _Included_de_rtlsdr_RtlDevice
#ifdef __cplusplus
extern "C" {
#endif
#undef de_rtlsdr_RtlDevice_TUNER_UNKNOWN
#define de_rtlsdr_RtlDevice_TUNER_UNKNOWN 0L
#undef de_rtlsdr_RtlDevice_TUNER_E4000
#define de_rtlsdr_RtlDevice_TUNER_E4000 1L
#undef de_rtlsdr_RtlDevice_TUNER_FC0012
#define de_rtlsdr_RtlDevice_TUNER_FC0012 2L
#undef de_rtlsdr_RtlDevice_TUNER_FC0013
#define de_rtlsdr_RtlDevice_TUNER_FC0013 3L
#undef de_rtlsdr_RtlDevice_TUNER_FC2580
#define de_rtlsdr_RtlDevice_TUNER_FC2580 4L
#undef de_rtlsdr_RtlDevice_TUNER_R820T
#define de_rtlsdr_RtlDevice_TUNER_R820T 5L
/* Inaccessible static: TUNER_NAMES */
/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getDeviceCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getDeviceCount
  (JNIEnv *, jclass);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getDeviceName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_rtlsdr_RtlDevice_getDeviceName
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getDeviceUsbStrings
 * Signature: (I)Lde/rtlsdr/UsbStrings;
 */
JNIEXPORT jobject JNICALL Java_de_rtlsdr_RtlDevice_getDeviceUsbStrings
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getIndexBySerial
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getIndexBySerial
  (JNIEnv *, jclass, jstring);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    open
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_open
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_close
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setXtalFreq
 * Signature: (Lde/rtlsdr/XtalFreq;)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setXtalFreq
  (JNIEnv *, jobject, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getXtalFreq
 * Signature: ()Lde/rtlsdr/XtalFreq;
 */
JNIEXPORT jobject JNICALL Java_de_rtlsdr_RtlDevice_getXtalFreq
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getUsbStrings
 * Signature: ()Lde/rtlsdr/UsbStrings;
 */
JNIEXPORT jobject JNICALL Java_de_rtlsdr_RtlDevice_getUsbStrings
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    writeEeprom
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_writeEeprom
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    readEeprom
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_readEeprom
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setCenterFreq
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setCenterFreq
  (JNIEnv *, jobject, jlong);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getCenterFreq
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_de_rtlsdr_RtlDevice_getCenterFreq
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setFreqCorrection
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setFreqCorrection
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getFreqCorrection
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getFreqCorrection
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getTunerType
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getTunerType
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getTunerGains
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_de_rtlsdr_RtlDevice_getTunerGains
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setTunerGain
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setTunerGain
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getTunerGain
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getTunerGain
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setTunerIfGain
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setTunerIfGain
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setTunerGainMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setTunerGainMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setSampleRate
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setSampleRate
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getSampleRate
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getSampleRate
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setTestMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setTestMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setAgcMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setAgcMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setDirectSampling
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setDirectSampling
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getDirectSampling
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getDirectSampling
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    setOffsetTuning
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_setOffsetTuning
  (JNIEnv *, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    getOffsetTuning
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_getOffsetTuning
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    resetBuffer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_resetBuffer
  (JNIEnv *, jobject);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    readSync
 * Signature: (Ljava/nio/ByteBuffer;I)I
 */
JNIEXPORT jint JNICALL Java_de_rtlsdr_RtlDevice_readSync
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    readAsync
 * Signature: (Lde/rtlsdr/RtlCallback;II)V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_readAsync
  (JNIEnv *, jobject, jobject, jint, jint);

/*
 * Class:     de_rtlsdr_RtlDevice
 * Method:    cancelAsync
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_rtlsdr_RtlDevice_cancelAsync
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
